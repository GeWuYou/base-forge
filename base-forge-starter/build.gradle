plugins {
    // 用于生成 IntelliJ IDEA 的项目文件，便于在 IDEA 中打开和管理项目
    id 'idea'
    // 应用 Java 插件，提供基本的 Java 代码编译和构建能力
    id 'java'
    // 应用 Java Library 插件，支持库开发，提供 API 和实现分离的能力
    id 'java-library'
    // 应用 Maven 发布插件，支持项目的构建产物发布到 Maven 仓库
    id 'maven-publish'
    // Spring 依赖管理插件，简化依赖版本管理
    id 'io.spring.dependency-management' version '1.1.6'
    // 引入kt
    id 'org.jetbrains.kotlin.jvm' version '2.1.0'
    id 'org.jetbrains.kotlin.plugin.spring' version '2.1.0'
}
/**
 * 由于 Kotlin 插件被引入时会自动添加依赖，但根项目不需要 Kotlin 依赖，因此需要排除 Kotlin 依赖
 */
configurations.configureEach {
    exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}
subprojects {
    def configDir = "$rootDir/config/"
    def tasksDir = "$configDir/tasks/"
    apply {
        plugin('idea')
        plugin('java')
        plugin('java-library')
        plugin('maven-publish')
        plugin('io.spring.dependency-management')
        plugin('org.jetbrains.kotlin.jvm')
        plugin('org.jetbrains.kotlin.plugin.spring')
        // 导入仓库配置
        from(file("$configDir/repositories.gradle"))
        // 导入依赖管理配置
        from(file("$configDir/dependencyManagement.gradle"))
        // 导入源代码任务
        from(file("$tasksDir/sourceTask.gradle"))
        // 导入发布配置
        from(file("$configDir/publishing.gradle"))
        // 导入依赖配置
        from(file("$configDir/dependencies.gradle"))
    }
    jar {
        enabled = true
    }
}
tasks.named('test') {
    useJUnitPlatform()
}
